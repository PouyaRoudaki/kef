// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// centered_kernel_matrix
arma::mat centered_kernel_matrix(const arma::vec& first_vec_kernel, const arma::vec& second_vec_kernel, const arma::vec& centering_grid, double hurst_coef);
RcppExport SEXP _kef_centered_kernel_matrix(SEXP first_vec_kernelSEXP, SEXP second_vec_kernelSEXP, SEXP centering_gridSEXP, SEXP hurst_coefSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type first_vec_kernel(first_vec_kernelSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type second_vec_kernel(second_vec_kernelSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type centering_grid(centering_gridSEXP);
    Rcpp::traits::input_parameter< double >::type hurst_coef(hurst_coefSEXP);
    rcpp_result_gen = Rcpp::wrap(centered_kernel_matrix(first_vec_kernel, second_vec_kernel, centering_grid, hurst_coef));
    return rcpp_result_gen;
END_RCPP
}
// density_at_sampled_x
arma::vec density_at_sampled_x(const arma::mat& centered_kernel_mat_at_sampled, double lambda_hat, const arma::vec& weight_hat_vec);
RcppExport SEXP _kef_density_at_sampled_x(SEXP centered_kernel_mat_at_sampledSEXP, SEXP lambda_hatSEXP, SEXP weight_hat_vecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type centered_kernel_mat_at_sampled(centered_kernel_mat_at_sampledSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_hat(lambda_hatSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type weight_hat_vec(weight_hat_vecSEXP);
    rcpp_result_gen = Rcpp::wrap(density_at_sampled_x(centered_kernel_mat_at_sampled, lambda_hat, weight_hat_vec));
    return rcpp_result_gen;
END_RCPP
}
// density_at_grid
arma::vec density_at_grid(const arma::mat& centered_kernel_mat_at_grid, const arma::vec& centered_kernel_self_grid, double lambda_hat, const arma::vec& weight_hat_vec);
RcppExport SEXP _kef_density_at_grid(SEXP centered_kernel_mat_at_gridSEXP, SEXP centered_kernel_self_gridSEXP, SEXP lambda_hatSEXP, SEXP weight_hat_vecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type centered_kernel_mat_at_grid(centered_kernel_mat_at_gridSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type centered_kernel_self_grid(centered_kernel_self_gridSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_hat(lambda_hatSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type weight_hat_vec(weight_hat_vecSEXP);
    rcpp_result_gen = Rcpp::wrap(density_at_grid(centered_kernel_mat_at_grid, centered_kernel_self_grid, lambda_hat, weight_hat_vec));
    return rcpp_result_gen;
END_RCPP
}
// get_dens_wo_grid
arma::vec get_dens_wo_grid(const arma::mat& centered_kernel_mat_at_sampled, double min_x, double max_x, const arma::vec& sampled_x, double lambda_hat, const arma::vec& weight_hat_vec);
RcppExport SEXP _kef_get_dens_wo_grid(SEXP centered_kernel_mat_at_sampledSEXP, SEXP min_xSEXP, SEXP max_xSEXP, SEXP sampled_xSEXP, SEXP lambda_hatSEXP, SEXP weight_hat_vecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type centered_kernel_mat_at_sampled(centered_kernel_mat_at_sampledSEXP);
    Rcpp::traits::input_parameter< double >::type min_x(min_xSEXP);
    Rcpp::traits::input_parameter< double >::type max_x(max_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type sampled_x(sampled_xSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_hat(lambda_hatSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type weight_hat_vec(weight_hat_vecSEXP);
    rcpp_result_gen = Rcpp::wrap(get_dens_wo_grid(centered_kernel_mat_at_sampled, min_x, max_x, sampled_x, lambda_hat, weight_hat_vec));
    return rcpp_result_gen;
END_RCPP
}
// get_dens_or_prob
List get_dens_or_prob(const arma::mat& centered_kernel_mat_at_sampled, const arma::mat& centered_kernel_mat_at_grid, const arma::vec& centered_kernel_self_grid, const arma::vec& sampled_x, const arma::vec& x_grid, double lambda_hat, const arma::vec& weight_hat_vec, bool type_of_p_is_prob, bool type_of_q_is_prob);
RcppExport SEXP _kef_get_dens_or_prob(SEXP centered_kernel_mat_at_sampledSEXP, SEXP centered_kernel_mat_at_gridSEXP, SEXP centered_kernel_self_gridSEXP, SEXP sampled_xSEXP, SEXP x_gridSEXP, SEXP lambda_hatSEXP, SEXP weight_hat_vecSEXP, SEXP type_of_p_is_probSEXP, SEXP type_of_q_is_probSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type centered_kernel_mat_at_sampled(centered_kernel_mat_at_sampledSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type centered_kernel_mat_at_grid(centered_kernel_mat_at_gridSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type centered_kernel_self_grid(centered_kernel_self_gridSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type sampled_x(sampled_xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type x_grid(x_gridSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_hat(lambda_hatSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type weight_hat_vec(weight_hat_vecSEXP);
    Rcpp::traits::input_parameter< bool >::type type_of_p_is_prob(type_of_p_is_probSEXP);
    Rcpp::traits::input_parameter< bool >::type type_of_q_is_prob(type_of_q_is_probSEXP);
    rcpp_result_gen = Rcpp::wrap(get_dens_or_prob(centered_kernel_mat_at_sampled, centered_kernel_mat_at_grid, centered_kernel_self_grid, sampled_x, x_grid, lambda_hat, weight_hat_vec, type_of_p_is_prob, type_of_q_is_prob));
    return rcpp_result_gen;
END_RCPP
}
// get_middle_points_grid
arma::vec get_middle_points_grid(double min, const arma::vec& samples, double max);
RcppExport SEXP _kef_get_middle_points_grid(SEXP minSEXP, SEXP samplesSEXP, SEXP maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type min(minSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type samples(samplesSEXP);
    Rcpp::traits::input_parameter< double >::type max(maxSEXP);
    rcpp_result_gen = Rcpp::wrap(get_middle_points_grid(min, samples, max));
    return rcpp_result_gen;
END_RCPP
}
// get_s_function
arma::vec get_s_function(const arma::vec& weight_hat_vec, double lambda_hat, double tau_hat, const arma::mat& centered_kernel_mat_at_sampled, const arma::vec& sampled_x, double min_x, double max_x);
RcppExport SEXP _kef_get_s_function(SEXP weight_hat_vecSEXP, SEXP lambda_hatSEXP, SEXP tau_hatSEXP, SEXP centered_kernel_mat_at_sampledSEXP, SEXP sampled_xSEXP, SEXP min_xSEXP, SEXP max_xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type weight_hat_vec(weight_hat_vecSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_hat(lambda_hatSEXP);
    Rcpp::traits::input_parameter< double >::type tau_hat(tau_hatSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type centered_kernel_mat_at_sampled(centered_kernel_mat_at_sampledSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type sampled_x(sampled_xSEXP);
    Rcpp::traits::input_parameter< double >::type min_x(min_xSEXP);
    Rcpp::traits::input_parameter< double >::type max_x(max_xSEXP);
    rcpp_result_gen = Rcpp::wrap(get_s_function(weight_hat_vec, lambda_hat, tau_hat, centered_kernel_mat_at_sampled, sampled_x, min_x, max_x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_kef_centered_kernel_matrix", (DL_FUNC) &_kef_centered_kernel_matrix, 4},
    {"_kef_density_at_sampled_x", (DL_FUNC) &_kef_density_at_sampled_x, 3},
    {"_kef_density_at_grid", (DL_FUNC) &_kef_density_at_grid, 4},
    {"_kef_get_dens_wo_grid", (DL_FUNC) &_kef_get_dens_wo_grid, 6},
    {"_kef_get_dens_or_prob", (DL_FUNC) &_kef_get_dens_or_prob, 9},
    {"_kef_get_middle_points_grid", (DL_FUNC) &_kef_get_middle_points_grid, 3},
    {"_kef_get_s_function", (DL_FUNC) &_kef_get_s_function, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_kef(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
