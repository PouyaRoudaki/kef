% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/marginal_likelihood.R
\name{marginal_log_likelihood}
\alias{marginal_log_likelihood}
\title{Compute Marginal Log Likelihood Using Rcpp}
\usage{
marginal_log_likelihood(
  centered_kernel_mat_at_sampled,
  sampled_x,
  min_x,
  max_x,
  p_vec = rep(1, nrow(centered_kernel_mat_at_sampled)),
  lambda,
  tau,
  std_rnorm_matrix,
  MC_iterations,
  parallel_computing = TRUE
)
}
\arguments{
\item{centered_kernel_mat_at_sampled}{A matrix of centered kernel values at sampled points.}

\item{sampled_x}{A numeric vector of sampled points.}

\item{min_x}{The minimum x value.}

\item{max_x}{The maximum x value.}

\item{p_vec}{A probability vector (default: uniform distribution).}

\item{lambda}{A scalar for the lambda hyperparameter.}

\item{tau}{A scalar for the tau hyperparameter.}

\item{std_rnorm_matrix}{A matrix of standard normal random values for Monte Carlo sampling.}

\item{MC_iterations}{The number of Monte Carlo iterations.}

\item{parallel_computing}{Logical; if TRUE, enables parallel computing.}
}
\value{
The computed log of the marginal likelihood.
}
\description{
This function computes the marginal log likelihood using a Monte Carlo approach
with optional parallel computing.
}
