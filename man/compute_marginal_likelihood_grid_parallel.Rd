% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/marginal_likelihood.R
\name{compute_marginal_likelihood_grid_parallel}
\alias{compute_marginal_likelihood_grid_parallel}
\title{Compute Marginal Likelihood Over a Grid of Hyperparameters (Parallel)}
\usage{
compute_marginal_likelihood_grid_parallel(
  centered_kernel_mat_at_sampled,
  min_x,
  max_x,
  sampled_x,
  hyperparam_grid,
  initial_lambda = 1,
  initial_w = rep(0, length(sampled_x)),
  MC_iterations,
  max_iterations = 5,
  parallel_computing = TRUE
)
}
\arguments{
\item{centered_kernel_mat_at_sampled}{A matrix of centered kernel values at sampled points.}

\item{min_x}{The minimum x value.}

\item{max_x}{The maximum x value.}

\item{sampled_x}{A numeric vector of sampled points.}

\item{hyperparam_grid}{A dataframe containing pairs of lambda and tau values.}

\item{initial_lambda}{The initial lambda value.}

\item{initial_w}{The initial weight vector.}

\item{MC_iterations}{The number of Monte Carlo iterations.}

\item{max_iterations}{The maximum number of iterations.}

\item{parallel_computing}{Logical; if TRUE, enables parallel computing.}
}
\value{
A dataframe containing lambda, tau, and their corresponding marginal log likelihoods.
}
\description{
This function computes the marginal likelihood for each combination of lambda and tau
in the provided hyperparameter grid using parallel computing.
}
